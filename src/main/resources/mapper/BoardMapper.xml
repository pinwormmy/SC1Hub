<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sc1hub.mapper.BoardMapper">

    <resultMap id="MemberDTO" type="com.sc1hub.member.MemberDTO">
        <result column="id" property="id" />
        <result column="nickName" property="nickName" />
    </resultMap>

    <resultMap id="boardCommentDTO" type="com.sc1hub.board.BoardCommentDTO">
        <result column="POST_NUM" property="postNum" />
        <result column="COMMENT_NUM" property="commentNum" />
        <result column="id" property="id" />
        <result column="REG_DATE" property="regDate" />
        <result column="content" property="content" />
        <collection property="memberDTO" resultMap="MemberDTO" />
    </resultMap>

    <select id="showPostList" resultType="com.sc1hub.board.BoardDTO">
        SELECT post_num, title, content, writer, REG_DATE, views, COMMENT_COUNT, recommend_count
        from ${tableName}
        WHERE <include refid="searchKeyword" /> AND notice=0
        order by post_num desc
        LIMIT #{postBeginPoint}, #{displayPostLimit}
    </select>

    <sql id="searchKeyword">
        <if test="searchType == 'title'">title like CONCAT('%', #{keyword}, '%')</if>
        <if test="searchType == 'content'">content like CONCAT('%', #{keyword}, '%')</if>
        <if test="searchType == 'titleAndContent'">title like CONCAT('%', #{keyword}, '%')
            or content like CONCAT('%', #{keyword}, '%')</if>
    </sql>

    <select id="readPost" resultType="com.sc1hub.board.BoardDTO">
        select * from ${tableName}
        where post_num=#{postNum}
    </select>

    <insert id="submitPost">
        INSERT INTO ${tableName}(TITLE, WRITER, REG_DATE, VIEWS, CONTENT, COMMENT_COUNT, NOTICE)
        VALUES(#{title}, #{writer}, NOW(), 0, #{content}, 0, #{notice})
    </insert>

    <update id="submitModifyPost">
        update ${tableName}
        set title=#{title}, content=#{content}, writer=#{writer}, notice=#{notice}
        where post_num=#{postNum}
    </update>

    <delete id="deletePost">
        delete from ${tableName}
        where post_num=#{postNum}
    </delete>

    <select id="countTotalPost" resultType="int">
        select count(*) from ${tableName}
        where <include refid="searchKeyword" /> and notice=0
    </select>

    <select id="countTotalComment" resultType="int">
        select count(*) from ${tableName}_COMMENT
        where POST_NUM=#{postNum}
    </select>

    <insert id="addComment">
        INSERT INTO ${tableName}_COMMENT(POST_NUM, ID, REG_DATE, CONTENT)
        VALUES(#{postNum}, #{id}, NOW(), #{content})
    </insert>

    <select id="showCommentList" resultMap="boardCommentDTO">
        SELECT * FROM
        (SELECT A.POST_NUM, A.COMMENT_NUM, A.ID, A.REG_DATE, A.CONTENT, B.NICKNAME
        FROM ${tableName}_COMMENT A
        INNER JOIN MEMBER B
        ON A.ID=B.ID
        WHERE A.POST_NUM=#{postNum}
        ORDER BY A.COMMENT_NUM DESC
        LIMIT #{postBeginPoint}, #{displayPostLimit} ) C
        ORDER BY COMMENT_NUM
    </select>

    <delete id="deleteComment">
        DELETE FROM ${tableName}_COMMENT
        WHERE COMMENT_NUM=#{commentNum}
    </delete>

    <update id="updateCommentCount">
        UPDATE ${tableName}
        SET COMMENT_COUNT=
        (SELECT COUNT(*) FROM ${tableName}_COMMENT
        WHERE POST_NUM=#{postNum})
        WHERE POST_NUM=#{postNum}
    </update>

    <update id="updateViews">
        UPDATE ${tableName}
        SET VIEWS= VIEWS + 1
        WHERE POST_NUM=#{postNum}
    </update>

    <insert id="saveViewUserIp">
        INSERT INTO ${tableName}_VIEWS
        VALUES(#{postNum}, #{ip}, NOW())
    </insert>

    <select id="checkViewUserIp" resultType="int">
        SELECT COUNT(*) FROM ${tableName}_VIEWS
        WHERE POST_NUM=#{postNum} AND IP=#{ip}
    </select>

    <select id="showSelfNoticeList" resultType="com.sc1hub.board.BoardDTO">
        SELECT * FROM ${tableName}
        WHERE NOTICE=1
        ORDER BY POST_NUM DESC
    </select>

    <!-- 추천 여부 확인 -->
    <select id="checkRecommendation" resultType="int">
        SELECT COUNT(*) FROM ${tableName}_recommend
        WHERE post_Num=#{postNum} AND user_Id=#{userId}
    </select>

    <!-- 추천 추가 -->
    <insert id="insertRecommendation">
        INSERT INTO ${tableName}_recommend (post_Num, user_Id)
        VALUES (#{postNum}, #{userId})
    </insert>

    <!-- 추천 취소 -->
    <delete id="deleteRecommendation">
        DELETE FROM ${tableName}_recommend
        WHERE post_Num=#{postNum} AND user_Id=#{userId}
    </delete>

    <!-- 추천 수 업데이트 -->
    <update id="updateTotalRecommendCount">
        UPDATE ${tableName}
        SET recommend_count = (SELECT COUNT(*) FROM ${tableName}_recommend WHERE post_Num=#{postNum})
        WHERE post_Num=#{postNum}
    </update>

    <!-- 추천 수 조회 -->
    <select id="getRecommendCount" resultType="int">
        SELECT recommend_count
        FROM ${tableName}
        WHERE post_Num=#{postNum}
    </select>

    <!-- 실추천 수 조회 -->
    <select id="getActualRecommendCount" resultType="int">
        SELECT COUNT(*) FROM ${tableName}_recommend WHERE post_Num=#{postNum}
    </select>

</mapper>
